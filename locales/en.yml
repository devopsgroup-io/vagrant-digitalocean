en:
  vagrant_digital_ocean:
    errors:
      api_status: |-
        There was an issue with the request made to the Digital Ocean
        API at:

        Path: %{path}
        URI Params: %{params}

        The response status from the API was:

        Status: %{status}
        Response: %{response}
      :json: |-
        There was an issue with the JSON response from the Digital Ocean
        API at:

        Path: %{path}
        URI Params: %{params}

        The response JSON from the API was:

        Response: %{response}
      :result_match: |-
        The result collection for %{collection_name}:

        %{sub_obj}

        Contained no object with the value "%{value}" for the the
        key "%{key}".

        Please ensure that the configured value exists in the collection.
      :certificate: |-
        The secure connection to the Digital Ocean API has failed. Please
        ensure that your local certificates directory is defined in the
        provider config.

            config.vm.provider :digital_ocean do |vm|
              vm.ca_path = "/path/to/ssl/ca/cert.crt"
            end

        This is generally caused by the OpenSSL configuration associated
        with the Ruby install being unaware of the system specific ca
        certs.
      :local_ip: |-
        The Digital Ocean provider was unable to determine the host's IP.

    actions:
      create:
        skip: "Droplet is active, skipping creation"
        create_key: "Adding key client account"
        create_droplet: "Creating the droplet"
        wait_active: "Waiting for the droplet to become active (>= 1 min)"
        key_not_found: "Public SSH key not provided, using insecure Vagrant key"
      destroy:
        destroying: "Destroying droplet"
        not_active_or_new: "Droplet not in the `active` or `new` state"
        clean_nfs: "Cleaning up NFS exports, may require sudo password"
        wait_off: "Waiting for the droplet to be destroyed"
      setup_sudo:
        exec: "Making alterations to the sudoers file where necessary"
      setup_nfs:
        machine_ip: "Droplet IP: %{ip}"
        host_ip: "Host IP: %{ip}"
        install: "Installing NFS on the droplet"
        force_shared_folders: "Forcing shared folders to use NFS where necessary"
      setup_provisioner:
        install: "Installing provisioner: %{provisioner} (>= 2 min)"
      setup_user:
        create: "Creating user '%{user}' and setting password"
        sudo: "Enabling sudo for user '%{user}'"
        key: "Adding public key to authorized_keys"
