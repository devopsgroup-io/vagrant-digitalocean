en:
  vagrant_digital_ocean:
    config:
      client_id_required: "Client ID required"
      api_key_required: "API key required"
      private_key_required: "SSH private key path required"
      private_key_missing: "SSH private key is missing: %{key}"
      public_key_missing: "SSH public key is missing: %{key}.pub"
    errors:
      public_key: "Failed to read public key: %{path}"
      api_status: |-
        There was an issue with the request made to the Digital Ocean
        API at:

        Path: %{path}
        URI Params: %{params}

        The response status from the API was:

        Status: %{status}
        Response: %{response}

      rsync: |-
        There was an error when attemping to rsync a share folder.
        Please inspect the error message below for more info.

        Host path: %{hostpath}
        Guest path: %{guestpath}
        Error: %{stderr}

      :json: |-
        There was an issue with the JSON response from the Digital Ocean
        API at:

        Path: %{path}
        URI Params: %{params}

        The response JSON from the API was:

        Response: %{response}
      :result_match: |-
        The result collection for %{collection_name}:

        %{sub_obj}

        Contained no object with the value "%{value}" for the the
        key "%{key}".

        Please ensure that the configured value exists in the collection.
      :certificate: |-
        The secure connection to the Digital Ocean API has failed. Please
        ensure that your local certificates directory is defined in the
        provider config.

            config.vm.provider :digital_ocean do |vm|
              vm.ca_path = "/path/to/ssl/ca/cert.crt"
            end

        This is generally caused by the OpenSSL configuration associated
        with the Ruby install being unaware of the system specific ca
        certs.
      :local_ip: |-
        The Digital Ocean provider was unable to determine the host's IP.

    actions:
      create:
        create_droplet: "Creating the droplet"
        wait_active: "Waiting for the droplet to become active (>= 1 min)"
      rebuild:
        rebuild: "Rebuilding the droplet"
        wait: "Waiting for the droplet to rebuild (>= 1 min)"
      destroy:
        destroying: "Destroying droplet"
        wait_off: "Waiting for the droplet to be destroyed"
      setup_sudo:
        exec: "Making alterations to the sudoers file where necessary"
      setup_provisioner:
        install: "Installing provisioner: %{provisioner} (>= 2 min)"
      sync_folders:
        rsync_folder: "Rsyncing folder: %{hostpath} => %{guestpath}"
      setup_ssh_key:
        existing_key: "Using existing SSH key: %{name}"
        insecure_key: "Using default insecure vagrant SSH key"
        new_key: "Creating new SSH key: %{name} (%{path})"
      message_is_active:
        active: "Droplet is already active"
        not_active: "Droplet is not active"
      check_ssh_user:
        fallback: "Failed to authenticate with '%{user}', falling back to 'root'"
      modify_provision_path:
        modify: "Modifying provisioning path to '/home/%{user}/tmp'"
